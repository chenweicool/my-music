<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mymusic.mapper.SongListMapper">
  <resultMap id="BaseResultMap" type="com.mymusic.domain.SongList">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="style" jdbcType="VARCHAR" property="style" />
    <result column="introduction" jdbcType="LONGVARCHAR" property="introduction" />
    <result column="uuid"  jdbcType="VARCHAR" property="uuid"/>
    <result column="type"  jdbcType="TINYINT" property="type"/>
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from song_list
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mymusic.domain.SongList" >
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into song_list (id, title, pic, 
      style, introduction,uuid,type)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, 
      #{style,jdbcType=VARCHAR}, #{introduction,jdbcType=LONGVARCHAR},#{uuid,jdbcType=VARCHAR},#{type, jdbcType=TINYINT})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.mymusic.domain.SongList">
    update song_list
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="style != null">
        style = #{style,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=LONGVARCHAR}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--更新歌单的图片的信息-->
  <update id="updateSongListImg" parameterType="com.mymusic.domain.SongList" >
    update song_list
    <set >
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select sl.id, sl.title, sl.pic, sl.style, sl.introduction,sl.type
        from song_list sl
    where id = #{id,jdbcType=INTEGER}
  </select>

  <!--分页查询歌单信息-->
    <select id="getSongListByPage" resultMap="BaseResultMap">
        select sl.id, sl.title, sl.pic, sl.style, sl.introduction,sl.type
         from song_list sl
    </select>
    <!--根据歌曲的风格返回歌曲的信息 模糊查询-->
  <select id="likeStyle" parameterType="java.lang.String" resultMap="BaseResultMap">
    select sl.id, sl.title, sl.pic, sl.style, sl.introduction,sl.type
    from song_list sl where style like CONCAT('%',#{style},'%')
  </select>

  <select id="songListOfTitle" parameterType="java.lang.String" resultMap="BaseResultMap">
    select sl.id, sl.title, sl.pic, sl.style, sl.introduction,sl.type
     from song_list sl where title like CONCAT('%',#{title},'%')
  </select>

  <!--根据用户的id查询用户创建的歌单的信息-->
  <select id="findMySongList" parameterType="java.lang.Long" resultMap="BaseResultMap">
      select sl.id, sl.title, sl.pic, sl.style, sl.introduction ,sl.type from song_list sl
      left join sys_user_songlist su on su.songlist_id = sl.id
      left join sys_user u on u.id = su.user_id
      where u.id = #{userId} and sl.type=1
  </select>

  <select id="findSongListByUUID" parameterType="java.lang.String" resultMap="BaseResultMap">
      select  sl.id, sl.title, sl.pic, sl.style, sl.introduction ,sl.type from song_list sl where sl.uuid = #{uuid}
  </select>
  <select id="getSongListHot" resultMap="BaseResultMap">
      select  sl.id, sl.title, sl.pic, sl.style, sl.introduction ,sl.type from song_list sl limit 10;
  </select>

  <!--查询歌曲单个的关联记录-->
  <select id="getSongToSongList" resultType="com.mymusic.common.domain.SongToSongList">
       select id,songlist_id,song_id from songlist_song where song_id = #{songId} and songlist_id = #{songListId} and type= #{type}
  </select>

  <select id="getSongToSongLists" resultType="com.mymusic.common.domain.SongToSongList">
        select id,songlist_id,song_id from songlist_song where
               <foreach collection="songListIds" item="songListId" open=" (" close=")" separator="or" >
                  song_id = #{songId} and songlist_id = #{songListId} and type= #{type}
               </foreach>
  </select>
  <!--添加多个歌曲的收藏-->
  <insert id="addSongToSongList">
     insert  into songlist_song(song_id,songlist_id,type) values
    <foreach collection="songListIds" item="songListId" separator=",">
      (#{songId},#{songListId},#{type})
    </foreach>
  </insert>
  <!--移除歌曲收藏-->
  <delete id="deleteSongToSongList" >
       delete from songlist_song where song_id = #{songId} and songlist_id = #{songListId} and type = #{type}
  </delete>

</mapper>