<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mymusic.mapper.SingerMapper">
    <resultMap id="BaseResultMap" type="com.mymusic.domain.Singer">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="TINYINT" />
        <result column="pic" property="pic" jdbcType="VARCHAR" />
        <result column="birth" property="birth" jdbcType="TIMESTAMP" />
        <result column="location" property="location" jdbcType="VARCHAR" />
        <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    </resultMap>

    <!--基本的sql语句的执行区间-->
    <sql id="Base_Column_List" >
        id, name, sex, pic, birth, location, introduction
    </sql>


    <!--删除歌手信息-->
    <delete id="delete" parameterType="java.lang.Integer" >
        delete from singer where id = #{id,jdbcType=INTEGER}
    </delete>

    <!--增加歌手信息,注意增加主键回填-->
    <insert id="insert" parameterType="com.mymusic.domain.Singer" useGeneratedKeys="true" keyProperty="id" >
        insert into singer (id, name, sex,
               pic, birth, location,
               introduction)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT},
      #{pic,jdbcType=VARCHAR}, #{birth,jdbcType=TIMESTAMP}, #{location,jdbcType=VARCHAR},
      #{introduction,jdbcType=VARCHAR})
    </insert>

    <!--增加一条记录到歌手-歌曲的关联表中去-->
    <insert id="addSingerIdSongId">
        insert into singer_song(singer_id,song_id) values (#{singerId},#{songId}})
    </insert>

    <!--更新歌手的数据-->
    <update id="updateSingerMsg" parameterType="com.mymusic.domain.Singer" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update singer
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null" >
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="pic != null" >
                pic = #{pic,jdbcType=VARCHAR},
            </if>
            <if test="birth != null" >
                birth = #{birth,jdbcType=TIMESTAMP},
            </if>
            <if test="location != null" >
                location = #{location,jdbcType=VARCHAR},
            </if>
            <if test="introduction != null" >
                introduction = #{introduction,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--更新歌手的头像信息-->
    <!--<update id="updateSingerPic" parameterType="com.mymusic.domain.Consumer" >
        update singer
        <set >
            <if test="pic != null" >
                pic = #{pic,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>-->

    <!--根据用户的主键更新歌的信息-->
    <update id="updateByPrimaryKey" parameterType="com.mymusic.domain.Singer" >
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update singer
        set name = #{name,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=TINYINT},
        pic = #{pic,jdbcType=VARCHAR},
        birth = #{birth,jdbcType=TIMESTAMP},
        location = #{location,jdbcType=VARCHAR},
        introduction = #{introduction,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--查询单个歌手的信息-->
    <select id="findByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from singer where id = #{id, jdbcType=INTEGER}
    </select>

    <!--根据名字来查询歌手的信息-->
    <select id="singerOfName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from singer where name like CONCAT('%',#{name},'%')
    </select>

    <!--根据歌手的性别进行查询-->
    <select id="singerOfSex" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select *
        from singer
        where sex = #{sex, jdbcType=INTEGER}
  </select>
</mapper>