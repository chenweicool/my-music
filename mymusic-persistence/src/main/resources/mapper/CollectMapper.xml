<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mymusic.mapper.CollectMapper" >
  <resultMap id="BaseResultMap" type="com.mymusic.domain.Collect" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="song_id" property="songId" jdbcType="BIGINT" />
    <result column="song_list_id" property="songListId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, type, song_id, song_list_id, create_time,update_time
  </sql>

  <select id="getCollectsByUserId" resultType="com.mymusic.common.domain.SongListCollectVo" parameterType="java.lang.Long">
   select sl.id, sl.title, sl.pic, sl.style, sl.introduction,su.update_time as updateTime from song_list sl
      left join collect su on su.song_list_id = sl.id
      left join sys_user u on u.id = su.user_id
      where u.id  = #{userIdDB, jdbcType=BIGINT}
  </select>

  <delete id="deleteCollectBySongListId" parameterType="java.lang.Integer" >
    delete from collect
    where song_list_id = #{collectSongListId, jdbcType=INTEGER}
  </delete>

  <insert id="addCollectionSongList" parameterType="com.mymusic.domain.Collect" >
    insert into collect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="songId != null" >
        song_id,
      </if>
      <if test="songListId != null" >
        song_list_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="songId != null" >
        #{songId,jdbcType=BIGINT},
      </if>
      <if test="songListId != null" >
        #{songListId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="getCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(*) from song_list sl
      left join collect su on su.song_list_id = sl.id
      where sl.id  = #{songListCollectId, jdbcType=INTEGER}
  </select>
</mapper>
